<?php
// –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
define('SECURE_TOKEN', 'novoeilinskoe_2024'); // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ

// –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—É—Ç–∏ –¥–ª—è –ª–æ–≥–æ–≤
ini_set('error_log', $_SERVER['DOCUMENT_ROOT'] . '/logs/error.log');

// –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É origin –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç CSRF
$allowed_origins = [
    'https://novoeilinskoe.ru',
    'http://novoeilinskoe.ru',
    'https://www.novoeilinskoe.ru',
    'http://www.novoeilinskoe.ru'
];

if (isset($_SERVER['HTTP_ORIGIN'])) {
    if (in_array($_SERVER['HTTP_ORIGIN'], $allowed_origins)) {
        header('Access-Control-Allow-Origin: ' . $_SERVER['HTTP_ORIGIN']);
    } else {
        die('Unauthorized origin');
    }
}

// –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –æ—à–∏–±–∫–∏ –≤ —Ñ–∞–π–ª
ini_set('log_errors', 1);
ini_set('error_log', 'error.log');
error_log('Request received');

// –û—Ç–∫–ª—é—á–∞–µ–º –≤—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ –≤ –±—Ä–∞—É–∑–µ—Ä
ini_set('display_errors', 0);
error_reporting(0);

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è CORS –∏ JSON
header('Content-Type: application/json; charset=utf-8');
header('Access-Control-Allow-Methods: POST, GET, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type');

// –ï—Å–ª–∏ —ç—Ç–æ preflight –∑–∞–ø—Ä–æ—Å
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    exit(0);
}

// –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
if (!isset($_POST['token']) || $_POST['token'] !== 'novoeilinskoe_2024') {
    die('Unauthorized access');
}

// –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
$name = filter_input(INPUT_POST, 'name', FILTER_SANITIZE_STRING);
$phone = filter_input(INPUT_POST, 'phone', FILTER_SANITIZE_STRING);

if (!$name || !$phone) {
    die('Invalid input data');
}

// –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
error_log('Parameters: ' . print_r($_GET, true));

// –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
$plotId = isset($_GET['plotId']) ? $_GET['plotId'] : '';
$square = isset($_GET['square']) ? $_GET['square'] : '';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
if (empty($name) || empty($phone) || empty($plotId)) {
    echo json_encode(['success' => false, 'error' => 'Missing required fields']);
    exit;
}

try {
    $botToken = '7480928940:AAHTjrTEoVRfIqRYw74cU1yzjpUMdskcW-Y';
    // $chatId = '7492518102';
    $chatId = '271823315';

    $message = "üè† –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—á–∞—Å—Ç–∫–∞!\n\n";
    $message .= "üë§ –ò–º—è: $name\n";
    // –û—á–∏—â–∞–µ–º –Ω–æ–º–µ—Ä –¥–ª—è —Å—Å—ã–ª–∫–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ –ø–ª—é—Å)
    $cleanPhone = preg_replace('/[^0-9+]/', '', $phone);
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
    $message .= "üìû –¢–µ–ª–µ—Ñ–æ–Ω: <a href=\"tel:$cleanPhone\">$phone</a>\n";
    $message .= "üó∫ –ù–æ–º–µ—Ä —É—á–∞—Å—Ç–∫–∞: $plotId\n";
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä —Å —É—á–µ—Ç–æ–º –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤
    $cadastralNumber = ($plotId == 2270 || $plotId == 2271) ? 
        "69:10:0000025:$plotId" : 
        "69:10:0000032:$plotId";
    $message .= "üìã –ö–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä: $cadastralNumber\n";
    $message .= "üìê –ü–ª–æ—â–∞–¥—å: $square —Å–æ—Ç–æ–∫";

    $params = http_build_query([
        'chat_id' => $chatId,
        'text' => $message,
        'parse_mode' => 'HTML',
        'disable_web_page_preview' => true
    ]);
    
    $url = "https://api.telegram.org/bot$botToken/sendMessage?{$params}";
    
    $result = @file_get_contents($url);
    
    if ($result === false) {
        throw new Exception('Failed to send message');
    }
    
    $response = json_decode($result, true);
    
    if (!isset($response['ok']) || !$response['ok']) {
        throw new Exception('Telegram API error');
    }
    
    echo json_encode(['success' => true]);
    
} catch (Exception $e) {
    echo json_encode(['success' => false, 'error' => $e->getMessage()]);
}
?> 